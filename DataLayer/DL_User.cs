using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using EntityLayer;

namespace DataLayer
{
    public class DL_User
    {
        public List<Users> ToList()
        {
            List<Users> userList = new List<Users>();

            using (SqlConnection objConnection = new SqlConnection(Connection.stringConnection))
            {
                try
                {
                    StringBuilder query = new StringBuilder();
                    query.AppendLine("select idUsuario, nombre, primerApellido, segundoApellido, correo, clave");
                    query.AppendLine("from tbl_Usuario");

                    SqlCommand cmd = new SqlCommand(query.ToString(), objConnection);
                    cmd.CommandType = CommandType.Text;

                    objConnection.Open();

                    string role = string.Empty;

                    using (SqlDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            userList.Add(new Users()
                            {
                                IdUsuario = Convert.ToInt32(dr["idUsuario"]),
                                Nombre = dr["nombre"].ToString(),
                                PrimerApellido = dr["primerApellido"].ToString(),
                                SegundoApellido = dr["segundoApellido"].ToString(),
                                Correo = dr["correo"].ToString(),
                                Clave = dr["clave"].ToString(),
                            });
                        }
                    }
                    objConnection.Close();
                }
                catch (Exception ex)
                {
                    userList = new List<Users>();
                }
            }
            return userList;
        }

        public int InsertarUsuario(string Nombre, string PrimerApellido, string SegundoApellido, string Correo, string Clave, out string message)
        {
            int autoGeneratedID = 0;
            message = string.Empty;

            try
            {
                using (SqlConnection objConnection = new SqlConnection(Connection.stringConnection))
                {
                    SqlCommand cmd = new SqlCommand("SP_Insertar_Usuario", objConnection);
                    cmd.Parameters.AddWithValue("Nombre", Nombre);
                    cmd.Parameters.AddWithValue("PrimerApellido", PrimerApellido);
                    cmd.Parameters.AddWithValue("SegundoApellido", SegundoApellido);
                    cmd.Parameters.AddWithValue("Correo", Correo);
                    cmd.Parameters.AddWithValue("Clave", Clave);

                    cmd.Parameters.Add("result", SqlDbType.Int).Direction = ParameterDirection.Output;
                    cmd.Parameters.Add("message", SqlDbType.VarChar, 500).Direction = ParameterDirection.Output;

                    cmd.CommandType = CommandType.StoredProcedure;

                    objConnection.Open();

                    cmd.ExecuteNonQuery();

                    autoGeneratedID = Convert.ToInt32(cmd.Parameters["result"].Value);
                    message = cmd.Parameters["message"].Value.ToString();

                    objConnection.Close();
                }
            }
            catch (Exception ex)
            {
                autoGeneratedID = 0;
                message = ex.Message;
            }
            return autoGeneratedID;
        }

        public bool ChangePassword(int idUser, string newPassword, out string message)
        {
            bool result = false;
            message = string.Empty;

            try
            {
                using (SqlConnection objConnection = new SqlConnection(Connection.stringConnection))
                {
                    SqlCommand cmd = new SqlCommand("UPDATE tbl_Users SET userPassword = @newPassword WHERE idUser = @idUser", objConnection);
                    cmd.Parameters.AddWithValue("@idUser", idUser);
                    cmd.Parameters.AddWithValue("@newPassword", newPassword);
                    cmd.CommandType = CommandType.Text;

                    objConnection.Open();
                    result = cmd.ExecuteNonQuery() > 0 ? true : false;
                    objConnection.Close();
                }

            }catch (Exception ex)
            {
                result = false;
                message = ex.Message;
            }
            return result;
        }

        public bool ResetPassword(int idUser, string password, out string message)
        {
            bool result = false;
            message = string.Empty;

            try
            {
                using (SqlConnection objConnection = new SqlConnection(Connection.stringConnection))
                {
                    SqlCommand cmd = new SqlCommand("UPDATE tbl_Users SET userPassword = @password WHERE idUser = @idUser", objConnection);
                    cmd.Parameters.AddWithValue("@idUser", idUser);
                    cmd.Parameters.AddWithValue("@password", password);
                    cmd.CommandType = CommandType.Text;

                    objConnection.Open();
                    result = cmd.ExecuteNonQuery() > 0 ? true : false;
                    objConnection.Close();
                }

            }
            catch (Exception ex)
            {
                result = false;
                message = ex.Message;
            }
            return result;
        }
    }
}
